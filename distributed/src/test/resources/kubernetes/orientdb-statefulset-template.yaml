apiVersion: v1
kind: Service
metadata:
  name: ${orientdbNodeName}
  labels:
    app: ${orientdbLabel}
spec:
  ports:
    - port: ${orientdbHttpPort}
      name: http
    - port: ${orientdbBinaryPort}
      name: binary
    - port: ${orientdbHazelcastPort}
      name: hazelcast
  clusterIP: None
  selector:
    app: ${orientdbLabel}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${orientdbNodeName}
spec:
  selector:
    matchLabels:
      app: ${orientdbLabel}
  replicas: 1
  serviceName: ${orientdbNodeName}
  template:
    metadata:
      labels:
        app: ${orientdbLabel}
        orientdb-cluster-member: "true"
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - args:
            - dserver.sh
          name: orientdb
          image: ${orientdbDockerImage}
          imagePullPolicy: Always
          env:
            - name: ENABLE_KUBERNETES_DISCOVERY
              value: "true"
            - name: ORIENTDB_NODE_NAME
              value: ${orientdbNodeName}
          ports:
            - containerPort: ${orientdbHttpPort}
              protocol: TCP
            - containerPort: ${orientdbBinaryPort}
              protocol: TCP
            - containerPort: ${orientdbHazelcastPort}
              protocol: TCP
          volumeMounts:
            - name: databases
              mountPath: /orientdb/databases
            - name: config
              mountPath: /orientdb/config
      # At some point, it would be better to fix resources.
      #    resources:
      #      requests:
      #      limits:
      initContainers:
        - name: copy-configs
          image: busybox:1.31
          command: ['sh', '-c']
          args:
            - cp -v /orientdb-config/* /orientdb/config/
          volumeMounts:
            - name: config
              mountPath: /orientdb/config
            - name: orientdb-config-cm-vol
              mountPath: /orientdb-config
      volumes:
        - name: orientdb-config-cm-vol
          configMap:
            name: ${orientdbConfigCm}
  volumeClaimTemplates:
    - metadata:
        name: databases
      spec:
        accessModes: ["ReadWriteOnce"]
#        storageClassName: "nfs-client"
        resources:
          requests:
            storage: ${databaseVolSize}Gi
    - metadata:
        name: config
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "nfs-client"
        resources:
          requests:
            storage: 100Mi
---
# A service that exposes the OrientDB instance to clients
apiVersion: v1
kind: Service
metadata:
  name: ${orientdbNodeName}-service
  labels:
    app: ${orientdbLabel}
spec:
  type: NodePort
  ports:
    - name: binary
      port: ${orientdbBinaryPort}
    - name: http
      port: ${orientdbHttpPort}
  selector:
    app: ${orientdbLabel}